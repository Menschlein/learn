{"ts":1346038942767,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*!\r\n *\r\n * @author Collin Hover / http://collinhover.com\r\n *\r\n */\r\nvar CKH = ( function ( _main ) {\r\n\t\r\n\tvar _jmpressDefaults,\r\n        _throttled = {},\r\n        _elements = {},\r\n        _cloneables = {},\r\n        _pathToClasses = 'classes/',\r\n        _pathToPresentations = 'presentations/',\r\n        _currentTab,\r\n\t\t_currentClassURL,\r\n        _currentClassReady,\r\n        _currentPresentationURL,\r\n        _presentationFocusTimeoutID,\r\n        _presentationFullscreenState = false,\r\n        _presentationFullscreenStatePrev = _presentationFullscreenState,\r\n        _mainNavHeight,\r\n        _presentationsPaddingVertical,\r\n        _classTimeMax = 15;\r\n    \r\n    /*===================================================\r\n    \r\n    public\r\n    \r\n    =====================================================*/\r\n    \r\n    _main.classes = {};\r\n    _main.classes.AddClass = AddClass;\r\n    _main.classes.AddProjects = AddProjects;\r\n    _main.classes.AddCalendar = AddCalendar;\r\n    \r\n\t/*===================================================\r\n    \r\n\tloading\r\n    \r\n    =====================================================*/\r\n\t\r\n\t$LAB\r\n\t\t.script( [\r\n\t\t\t\"js/jquery-1.7.2.min.js\",\r\n\t\t\t\"js/RequestAnimationFrame.js\",\r\n\t\t\t\"js/RequestInterval.js\",\r\n\t\t\t\"js/RequestTimeout.js\",\r\n            \"js/prettify.min.js\"\r\n\t\t] )\r\n\t\t.wait()\r\n\t\t.script( [\r\n            \"js/jmpress.all.min.js\",\r\n\t\t\t\"js/bootstrap.min.js\",\r\n            \"js/jquery.throttle-debounce.custom.min.js\",\r\n\t\t\t\"js/jquery.easing-1.3.min.js\",\r\n            \"js/jquery.imagesloaded.min.js\"\r\n\t\t] )\r\n        .wait( Init );\r\n\t\r\n\t/*===================================================\r\n    \r\n\tinit\r\n    \r\n    =====================================================*/\r\n\t\r\n\tfunction Init () {\r\n\t\t\r\n\t\t$( document ).ready( OnReady );\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction OnReady () {\r\n        \r\n        var id,\r\n            $initialTabToggle;\r\n        \r\n        // jmpress defaults\r\n        \r\n        _jmpressDefaults = $.jmpress('defaults');\r\n        _jmpressDefaults.hash.use = false;\r\n        _jmpressDefaults.fullscreen = false;\r\n        _jmpressDefaults.notSupportedClass = 'static-presentation';\r\n        // no zoom\r\n        _jmpressDefaults.viewPort.zoomBindMove = false;\r\n        _jmpressDefaults.viewPort.zoomBindWheel = false;\r\n        // max scale of 1, we can scale down to fit steps but not up\r\n        // this ensures css typography size is not exceeded\r\n        _jmpressDefaults.viewPort.maxScale = 1;\r\n        \r\n        // presentation fallback template\r\n       \r\n        $.jmpress(\"template\", \"fallback\", {\r\n    \t\tchildren: function ( i, element, all_elements ) {\r\n                \r\n                var $element = $( element ),\r\n                    x = i * $element.outerWidth( true );\r\n                \r\n        \t\treturn {\r\n    \t\t\t\t//y: 400,\r\n    \t\t\t\tx: x,\r\n                    //scale: 0.3,\r\n    \t\t\t\ttemplate: \"fallback\"\r\n    \t\t\t}\r\n                \r\n    \t\t}\r\n\t\t});\r\n        \r\n        // presentation remove on deinit\r\n        \r\n        $.jmpress( 'afterDeinit', function ( element ) {\r\n            \r\n            var $element = $( element );\r\n            \r\n            // if element is waiting for remove\r\n            \r\n            if ( _elements.$presentationsRemove.is( $element ) ) {\r\n                \r\n                // remove element from list\r\n                \r\n                _elements.$presentationsRemove = _elements.$presentationsRemove.not( $element );\r\n                \r\n                // remove element from display\r\n                \r\n                $element.remove();\r\n                \r\n            }\r\n            \r\n        } );\r\n        \r\n        // throttle functions\r\n        \r\n        _throttled.OnResize = $.throttle( 500, OnResize );\r\n        \r\n\t\t// get ui _elements\r\n\t\t\r\n        _elements.$logo = $( \".logo\" );\r\n\t\t_elements.$mainNav = $( \"#mainNav\" );\r\n        _elements.$mainNavToggle = _elements.$mainNav.find( '[data-toggle=\"collapse\"]' );\r\n\t\t_elements.$overview = $( '#overview' );\r\n\t\t_elements.$policies = $( '#policies' );\r\n\t\t_elements.$classes = $( '#classes' );\r\n\t\t_elements.$class = $( '#class' );\r\n        _elements.$classHeader = $( '#classHeader' );\r\n    \t_elements.$classContent = $( '#classContent' );\r\n        _elements.$className = $( '.class-name' );\r\n        _elements.$classSummary = $( '.class-summary' );\r\n        _elements.$classNav = $( '#classNav' );\r\n        _elements.$classNavWrapper = $( '#classNavWrapper' );\r\n        _elements.$classNavListMain = $( '#classNavListMain' );\r\n        _elements.$classNavListAlt = $( '#classNavListAlt' );\r\n\t\t_elements.$classSetup = $( '#classSetup' );\r\n    \t_elements.$classSetupHeader = $( '#classSetupHeader' );\r\n    \t_elements.$classSetupBody = $( '#classSetupBody' );\r\n        _elements.$classProjects = $();\r\n        _elements.$classProjectsLink = $( '<a href=\"#classProjects\">Projects</a>' );\r\n        _elements.$classCalendar = $();\r\n        _elements.$classCalendarLink = $( '<a href=\"#classCalendar\">Calendar</a>' );\r\n        _elements.$presentations = $( '#presentations' );\r\n        _elements.$presentationsControl = $( '#presentationsControl' );\r\n        _elements.$presentationsNav = $( '#presentationsNav' );\r\n        _elements.$presentationsRemove = $();\r\n        _elements.$presentationWrapper = $( '#presentationWrapper' );\r\n        _elements.$presentation = $( '#presentation' );\r\n        _elements.$presentationPlaceholder = $( '#presentationPlaceholder' );\r\n        _elements.$presentationSetup = $( '#presentationSetup' );\r\n        _elements.$presentationSetupInner = $( '#presentationSetupInner' );\r\n        _elements.$presentationFullscreenToggle = $( '#presentationFullscreenToggle' );\r\n        _elements.$presentationName = $( '.presentation-name' );\r\n        _elements.$presentationDescription = $( '.presentation-description' );\r\n\t\t_elements.$icons = $( 'i' );\r\n        _elements.$tabs = $( '.tab-pane' );\r\n        _elements.$tabToggles = $( '.tab-toggles' ).find( '[href^=\"#\"]' );\r\n        _elements.$buttonsDropdown = $( '[data-toggle=\"dropdown\"]' );\r\n\t\t_elements.$buttonsClasses = $( '.button-class' );\r\n    \t_elements.$buttonsPresentations = $( '.button-presentation' );\r\n        \r\n        // create _cloneables\r\n        \r\n        _cloneables.$presentation = _elements.$presentation.clone( true );\r\n        _cloneables.$projectsContainer = $( '<section id=\"classProjects\"><div class=\"page-header\"><h1>Projects <small>public service announcement: get back to work</small></h1></div><div id=\"projectsEmptyWarning\" class=\"container-center\"><div class=\"separate\"><img src=\"img/alertcircle_rev_64.png\" alt=\"Alert\"></div><p>All the projects have run off!</p><p><small>not to worry, they are probably around here somewhere...</small></p></div></section>' );\r\n        _cloneables.$projectsAccordion = $( '<div id=\"projectsAccordion\" class=\"accordion\"></div>' );\r\n        _cloneables.$projectResource = $( '<p class=\"project-resource\"><a target=\"_blank\" class=\"project-resource-link\"></a></p>' );\r\n        _cloneables.$projectRequirement = $( '<div class=\"requirement-item\"><div class=\"requirement-item-checkbox\"></div><span class=\"requirement-item-text\"></span></div>' );\r\n        _cloneables.$calendar = $( '<section id=\"classCalendar\"><div class=\"page-header\"><h1>Calendar</h1></div></section>' );\r\n        _cloneables.$calendarEmbed = $( '<iframe src=\"\" class=\"calendar-embed\" frameborder=\"0\" scrolling=\"no\" type=\"text/html\"></iframe>' );\r\n        _cloneables.$calendarLink = $( '<div class=\"hero-anchor\"><p><small>Calendar not working right?</small></p><a href=\"\" target=\"_blank\" class=\"btn btn-large btn-primary calendar-link\"><i class=\"icon-calendar icon-white\"></i> Open Simple Calendar</a></div>' );\r\n        \r\n        // get properties\r\n        \r\n        _mainNavHeight = _elements.$mainNav.outerHeight( true );\r\n        _presentationsPaddingVertical = parseInt( _elements.$presentations.css( 'padding-top' ) ) + parseInt( _elements.$presentations.css( 'padding-bottom' ) );\r\n        _presentationFullscreenState = _elements.$presentations.hasClass( 'fullscreen' );\r\n        \r\n        // for each main nav link\r\n        \r\n        _elements.$mainNav.find( 'a[href^=\"#\"]' ).not( _elements.$mainNavToggle ).each( function () {\r\n            \r\n            var $link = $( this );\r\n            \r\n            if ( $link.attr( 'href' ) !== \"#\" ) {\r\n                \r\n                $link.on( Modernizr.touch ? 'touchend' : 'click', function ( e ) {\r\n                    \r\n                    _elements.$mainNavToggle.click();\r\n                    \r\n                } );\r\n                \r\n            }\r\n            \r\n        } );\r\n        \r\n        // for each tab toggle\r\n        \r\n        _elements.$tabToggles.each( function () {\r\n            \r\n            var $toggle = $( this ),\r\n                $section = $( $toggle.data( 'section' ) );\r\n            \r\n            $toggle.on( Modernizr.touch ? 'touchend' : 'click', function ( e ) {\r\n                \r\n                if ( _currentTab !== $toggle.attr( 'href' ) ) {\r\n                    \r\n                    $toggle.tab('show');\r\n                    \r\n                }\r\n                else if ( $section.length > 0 ) {\r\n                    \r\n                    window.location.hash = '#' + $section.attr( 'id' );\r\n                    $section[0].scrollIntoView( true );\r\n                    \r\n                    e.preventDefault();\r\n                    \r\n                }\r\n                \r\n            } )\r\n            .on( 'show', function () {\r\n                \r\n                _currentTab = $toggle.attr( 'href' );\r\n                \r\n            } )\r\n            .on( 'shown', function () {\r\n                \r\n                OnResize();\r\n                \r\n                if ( $section.length > 0 ) {\r\n                    window.location.hash = '#' + $section.attr( 'id' );\r\n                    $section[0].scrollIntoView( true );\r\n                }\r\n                \r\n                if ( _currentTab === '#presentations' && _elements.$presentation.jmpress('initialized') === true ) {\r\n                    \r\n                    FitPresentation();\r\n                    \r\n                }\r\n                \r\n            } );\r\n            \r\n        } );\r\n        \r\n        // for all dropdowns\r\n        \r\n        _elements.$buttonsDropdown.parent().each( function () {\r\n            \r\n            var $dropdown = $( this );\r\n            \r\n            $dropdown.find( '.dropdown-menu a' ).each( function () {\r\n                \r\n                var $button = $( this );\r\n                \r\n                $button.on( Modernizr.touch ? 'touchend' : 'click', function () {\r\n                        \r\n                        $button.parent().removeClass( 'active' );\r\n                        \r\n                        $dropdown.removeClass('open');\r\n                        \r\n                    } )\r\n                    .on( 'shown', function () {\r\n                        $button.parent().removeClass( 'active' );\r\n                    } );\r\n                \r\n            } );\r\n            \r\n        } );\r\n        \r\n        // class nav\r\n        \r\n        _elements.$classNav.affix( { \r\n            offset: { \r\n                top: function () {\r\n                    return _elements.$classNavWrapper.offset().top - _mainNavHeight;\r\n                } \r\n            }\r\n        } );\r\n        \r\n\t\t// for each class button\r\n\t\t\r\n\t\t_elements.$buttonsClasses.each( function () {\r\n\t\t\t\r\n\t\t\tvar $button = $( this ),\r\n\t\t\t\turl;\r\n\t\t\t\r\n\t\t\t// get class url\r\n\t\t\t\r\n\t\t\turl = $.trim( $button.data( \"url\" ) ).replace( _pathToClasses, '' );\r\n\t\t\t\r\n\t\t\t// listen for activate\r\n\t\t\t\r\n\t\t\t$button.on( Modernizr.touch ? 'touchend' : 'click', function () {\r\n                \r\n\t\t\t\tif ( typeof url === 'string' && url.length > 0 && url !== _currentClassURL ) {\r\n                    \r\n\t\t\t\t\t// empty current class\r\n\t\t\t\t\t\r\n                    _currentClassReady = false;\r\n                    _elements.$classProjects = $();\r\n                    _elements.$classCalendar= $();\r\n\t\t\t\t\t_elements.$classContent.empty()\r\n                        .addClass( 'hidden' );\r\n                    _elements.$classHeader.addClass( 'hidden' );\r\n\t\t\t\t\t\r\n\t\t\t\t\t// change setup to loading\r\n\t\t\t\t\t\r\n\t\t\t\t\t_elements.$classSetup.removeClass( 'hidden' );\r\n                    _elements.$classSetupHeader.html( \"Class loading...\" );\r\n                    _elements.$classSetupBody.removeClass( 'alert-danger' ).addClass( 'alert-success' ).html( '<strong>One sec,</strong> looking up that class you selected.' );\r\n\t\t\t\t\t\r\n\t\t\t\t\t// store as current\r\n\t\t\t\t\t\r\n\t\t\t\t\t_currentClassURL = url;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// load\r\n\t\t\t\t\t\r\n\t\t\t\t\t_elements.$classContent.load( _pathToClasses + url, function ( responseText, textStatus ) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// if error on load\r\n\t\t\t\t\t\tif ( textStatus === 'error' ) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// change setup to error\r\n\t\t\t\t\t\t\t\r\n                            _elements.$classSetupHeader.html( \"Oops!\" );\r\n                            _elements.$classSetupBody.removeClass( 'alert-success' ).addClass( 'alert-danger' ).html( '<strong>This is embarrassing! </strong> Looks like that class got lost somewhere... try again or <a href=\"#overview\">let me know</a>.' );\r\n                            \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n                            \r\n                            // store current\r\n                            \r\n        \t\t\t\t\tif ( window.localStorage ) {\r\n        \t\t\t\t\t\t\r\n        \t\t\t\t\t\twindow.localStorage[ '_currentClassURL' ] = _currentClassURL;\r\n        \t\t\t\t\t\t\r\n        \t\t\t\t\t}\r\n                            \r\n                            // hide setup\r\n    \t\t\t\t\t    \r\n\t\t\t\t\t\t    _elements.$classSetup.addClass( 'hidden' );\r\n                            \r\n                            // class content\r\n                            \r\n                            _elements.$classHeader.removeClass( 'hidden' );\r\n                            _elements.$classContent.removeClass( 'hidden' );\r\n                            \r\n                            // misc\r\n                            \r\n                            ShowProjects();\r\n                            ShowCalendar();\r\n                            \r\n                            // resize\r\n                            \r\n                            _throttled.OnResize();\r\n                            \r\n                            // ready\r\n                            \r\n                            _currentClassReady = true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} );\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t} );\r\n\t\t\t\r\n\t\t} );\r\n        \r\n        // add fullscreen presentation callback\r\n        \r\n        //_elements.$presentationFullscreenToggle.on( Modernizr.touch ? 'touchend' : 'click', OnFullscreenToggle );\r\n        \r\n        // for each presentation button\r\n    \t\r\n\t\t_elements.$buttonsPresentations.each( function () {\r\n\t\t\t\r\n\t\t\tvar $button = $( this ),\r\n\t\t\t\turl;\r\n            \r\n            // set relative target\r\n            \r\n            $button.attr( 'href', '#presentations' );\r\n\t\t\t\r\n\t\t\t// get url\r\n\t\t\t\r\n\t\t\turl = $.trim( $button.data( \"url\" ) ).replace( _pathToPresentations, '' );\r\n\t\t\t\r\n\t\t\t// listen for activate\r\n\t\t\t\r\n\t\t\t$button.on( Modernizr.touch ? 'touchend' : 'click', function () {\r\n                \r\n\t\t\t\tif ( typeof url === 'string' && url.length > 0 ) {// && url !== _currentPresentationURL ) {\r\n                    \r\n                    // empty placeholder\r\n                    \r\n                    _elements.$presentationPlaceholder.empty();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// change setup to loading\r\n\t\t\t\t\t\r\n                    _elements.$presentationSetup.removeClass( 'hidden' ).removeClass( 'alert-danger' ).addClass( 'alert-success' );\r\n                    _elements.$presentationSetupInner.html( '<strong>One sec,</strong> preparing that presentation for you!' );\r\n\t\t\t\t\t\r\n\t\t\t\t\t// store as current\r\n\t\t\t\t\t\r\n\t\t\t\t\t_currentPresentationURL = url;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// load into prep\r\n\t\t\t\t\t\r\n\t\t\t\t\t_elements.$presentationPlaceholder.load( _pathToPresentations + url, function ( responseText, textStatus ) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// if error on load\r\n\t\t\t\t\t\tif ( textStatus === 'error' ) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// change setup to error\r\n\t\t\t\t\t\t\t\r\n                            _elements.$presentationSetup.removeClass( 'alert-success' ).addClass( 'alert-danger' );\r\n                            _elements.$presentationSetupInner.html( '<strong>Oops, this is embarrassing!</strong> Looks like that presentation got lost somewhere... try again or let me know.' );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n                            \r\n                            // init presentation\r\n                            \r\n                            InitPresentation();\r\n                            MoveToPresentation();\r\n                            \r\n                            // focus presentation so we can start navigating right away\r\n                            \r\n                            _elements.$presentation.focus(); \r\n                            \r\n\t\t\t\t\t\t}\r\n                        \r\n\t\t\t\t\t} );\r\n                    \r\n\t\t\t\t}\r\n                \r\n            } );\r\n            \r\n\t\t} );\r\n        \r\n        // update pretty print\r\n        \r\n        prettyPrint();\r\n\t\t\r\n\t\t// listen for resize\r\n\t\t\r\n\t\t$( window ).on( 'resize', _throttled.OnResize );\r\n        \r\n        // wait to setup initial presentation\r\n        \r\n        _elements.$tabToggles.filter( '[href=\"#presentations\"]' ).one( 'shown', InitPresentation );\r\n        \r\n        // get url hash for initial tab\r\n        \r\n        if ( window.location.hash && window.location.hash.length > 0 ) {\r\n            \r\n            $initialTabToggle = _elements.$tabToggles.filter( '[href=\"' + window.location.hash + '\"]' );\r\n            \r\n            // nothing found, search children of tab panes to find hash\r\n            \r\n            if ( $initialTabToggle.length === 0 ) {\r\n                \r\n                id = window.location.hash.replace( '#', '' );\r\n                \r\n                _elements.$tabs.each( function () {\r\n                    \r\n                    var $tab = $( this ),\r\n                        $child;\r\n                    \r\n                    $child = $tab.find( '[id=\"' + id + '\"]' );\r\n                    \r\n                    if ( $child.length > 0 ) {\r\n                        \r\n                        $initialTabToggle = _elements.$tabToggles.filter( '[href=\"#' + $tab.attr( 'id' ) + '\"]' );\r\n                        \r\n                        return false;\r\n                        \r\n                    }\r\n                    \r\n                } );\r\n                \r\n                if ( $initialTabToggle.length > 1 ) {\r\n                    \r\n                    $initialTabToggle = $initialTabToggle.filter( '[data-section=\"#' + id + '\"]' );\r\n                    \r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n        \r\n        if ( typeof $initialTabToggle === 'undefined' || $initialTabToggle.length === 0 ) {\r\n            \r\n            $initialTabToggle = _elements.$tabToggles.filter( '[href=\"#overview\"]' );\r\n            \r\n        }\r\n        \r\n        // show initial tab\r\n        \r\n        $initialTabToggle.tab( 'show' );\r\n        \r\n\t}\r\n    \r\n    /*===================================================\r\n    \r\n    events\r\n    \r\n    =====================================================*/\r\n\t\r\n\tfunction OnResize() {\r\n\t    \r\n        var windowHeight,\r\n            windowHeightLessMainNav,\r\n            presentationHeight;\r\n        \r\n        if ( _currentTab === '#presentations' ) {\r\n            \r\n            windowHeight = $( window ).innerHeight();\r\n            windowHeightLessMainNav = windowHeight - _mainNavHeight;\r\n            \r\n            // set presentation container min height\r\n            \r\n            if ( $( window ).innerWidth() < 768 ) {\r\n                \r\n                presentationHeight = windowHeight - _elements.$presentationsControl.outerHeight( true ) - _presentationsPaddingVertical;\r\n                \r\n            }\r\n            else if ( _presentationFullscreenState === true ) {\r\n                \r\n                presentationHeight = windowHeightLessMainNav - _elements.$presentationsControl.outerHeight( true );\r\n                \r\n            }\r\n            else {\r\n                \r\n                presentationHeight = windowHeightLessMainNav - _elements.$presentationsControl.outerHeight( true ) - _presentationsPaddingVertical;\r\n                \r\n            }\r\n            \r\n            _elements.$presentation.css( 'min-height', presentationHeight );\r\n            \r\n        }\r\n        \r\n        // class nav\r\n        \r\n        if ( _currentTab === '#classes' ) {\r\n            \r\n            _elements.$classNavWrapper.css( 'height', _elements.$classNav.outerHeight( true ) );\r\n            \r\n        }\r\n        \r\n\t}\r\n    \r\n    function OnProjectToggle () {\r\n        \r\n        this.collapse( 'toggle' );\r\n        \r\n    }\r\n\t\r\n\tfunction OnRequirementToggle () {\r\n\t\t\r\n\t\tvar $requirementItem = $( this ),\r\n\t\t\tid = $requirementItem.attr( 'id' );\r\n\t\t\r\n\t\t$requirementItem.toggleClass( 'complete' );\r\n\t\t\r\n\t\tif ( window.localStorage ) {\r\n\t\t\t\r\n\t\t\twindow.localStorage[ id ] = $requirementItem.hasClass( 'complete' );\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n    \r\n    function OnFullscreenToggle ( off ) {\r\n        \r\n        // clear focus\r\n        \r\n        if ( typeof _presentationFocusTimeoutID !== 'undefined' ) {\r\n            \r\n            window.clearRequestTimeout( _presentationFocusTimeoutID );\r\n            _presentationFocusTimeoutID = undefined;\r\n            \r\n        }\r\n        \r\n        // remove listeners\r\n        \r\n        $( window ).off( 'keyup', OnKeyReleased );\r\n        \r\n        // toggle fullscreen classes\r\n        \r\n        if ( off !== true || _presentationFullscreenState === true ) {\r\n            \r\n            _elements.$presentationSetupInner.toggleClass( 'container' );\r\n            _elements.$presentations.toggleClass( 'fullscreen' );\r\n            \r\n        }\r\n        \r\n        // handle by fullscreen state\r\n        \r\n        _presentationFullscreenStatePrev = _presentationFullscreenState;\r\n        _presentationFullscreenState = _elements.$presentations.hasClass( 'fullscreen' );\r\n        \r\n        if ( _presentationFullscreenState !== _presentationFullscreenStatePrev ) {\r\n            \r\n            if ( _presentationFullscreenState === true ) {\r\n                \r\n                // listen for esc key\r\n                \r\n                $( window ).on( 'keyup', OnKeyReleased );\r\n                \r\n            }\r\n            \r\n            // Resize\r\n            \r\n            _throttled.OnResize();\r\n            \r\n            // delay focus/move\r\n            \r\n            _presentationFocusTimeoutID = window.requestTimeout( function () {\r\n                \r\n                // move screen to presentation\r\n            \r\n                MoveToPresentation();\r\n                \r\n                // focus presentation\r\n                \r\n                _elements.$presentation.focus();\r\n                \r\n            }, 200 );\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    function OnKeyReleased ( e ) {\r\n        \r\n        var keyCode = ( ( e.which || e.key || e.keyCode ) + '' ).toLowerCase();\r\n        \r\n        // by key\r\n        \r\n        // escape\r\n        if ( keyCode === '27' ) {\r\n            \r\n            OnFullscreenToggle();\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    /*===================================================\r\n    \r\n    classes\r\n    \r\n    =====================================================*/\r\n    \r\n    function AddClass ( parameters ) {\r\n        \r\n        var name,\r\n            navigation;\r\n        \r\n        if ( parameters && typeof parameters.name !== 'undefined' ) {\r\n            \r\n            // properties\r\n            \r\n            name = $.trim( parameters.name );\r\n            \r\n            // handle name and summary\r\n            \r\n            _elements.$className.html( name );\r\n            \r\n            if ( typeof parameters.summary === 'string' ) {\r\n                \r\n                _elements.$classSummary.removeClass( 'hidden' ).html( parameters.summary );\r\n                \r\n            }\r\n            else {\r\n                \r\n                _elements.$classSummary.addClass( 'hidden' );\r\n                \r\n            }\r\n            \r\n            // links\r\n            \r\n            _elements.$classNavListMain.empty();\r\n            _elements.$classNavListAlt.empty();\r\n            \r\n            navigation = parameters.navigation;\r\n            \r\n            if ( navigation.main ) {\r\n                \r\n                $.each( navigation.main, function ( i, element ) {\r\n                    \r\n                    AddClassLink( element, _elements.$classNavListMain );\r\n                    \r\n                } );\r\n                \r\n            }\r\n            \r\n            if ( navigation.alt ) {\r\n                \r\n                $.each( navigation.alt, function ( i, element ) {\r\n                    \r\n                    AddClassLink( element, _elements.$classNavListAlt );\r\n                    \r\n                } );\r\n                \r\n            }\r\n            \r\n            AddClassLink( '<a href=\"#classes\"><h6>' + name + '</h6></a>', _elements.$classNavListAlt );\r\n            \r\n            // misc\r\n            \r\n            AddProjects( parameters.projects );\r\n            AddCalendar( parameters.calendar );\r\n            \r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    function AddClassLink( link, $list ) {\r\n        \r\n        var $link = $( link ),\r\n            $target;\r\n        \r\n        if ( $list && $list.length > 0 && _elements.$classNav.find( $link ).length === 0 ) {\r\n            \r\n            $link.appendTo( $list ).wrap( $( '<li></li>' ) );\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    /*===================================================\r\n    \r\n    projects\r\n    \r\n    =====================================================*/\r\n    \r\n    function AddProjects ( parameters ) {\r\n        \r\n        var i, il,\r\n            $project,\r\n            name,\r\n            id,\r\n            data,\r\n            files,\r\n            $files,\r\n            $file,\r\n            links,\r\n            $links,\r\n            $link,\r\n            requirements,\r\n            $requirements,\r\n    \t\trequirementIds = [],\r\n\t\t\trequirementIdCounts = {},\r\n            requirementId,\r\n            requirementText,\r\n            $requirement;\r\n        \r\n        // if parameters is list, do recursive add\r\n        \r\n        if ( Object.prototype.toString.call( parameters ) === '[object Array]' ) {\r\n            \r\n            for ( i = 0, il = parameters.length; i < il; i++ ) {\r\n                \r\n                AddProjects( parameters[ i ] );\r\n                \r\n            }\r\n            \r\n        }\r\n        // handle single project\r\n        else if ( parameters && typeof parameters.name !== 'undefined' && typeof parameters.summary !== 'undefined' && typeof parameters.time !== 'undefined' ) {\r\n            \r\n            // properties\r\n            \r\n            name = $.trim( parameters.name );\r\n            id = _currentClassURL + '_Project_' + name;\r\n            \r\n            // init new project\r\n            \r\n            $project = $( '<div class=\"accordion-group project\"><div class=\"accordion-heading\"><a class=\"accordion-toggle\"><h4 class=\"project-name\"></h4></a></div><div class=\"accordion-body\"><div class=\"accordion-inner\"><div class=\"row\"><div class=\"span3\"><div class=\"hero-anchor\"><h6>Summary</h6><p class=\"project-summary\"></p></div><div class=\"hero-anchor\"><h6>What You Can Use</h6><p class=\"project-usables\"></p></div><div class=\"hero-anchor\"><h6>Timeline</h6><p class=\"project-time\"></p><div class=\"progress progress-success progress-striped\"><div id=\"puzzleActiveScoreBar\" class=\"bar project-timebar\" style=\"width: 0%;\"></div></div></div><div class=\"hero-anchor project-files\"><h6>Files</h6></div><div class=\"hero-anchor project-links\"><h6>Links</h6></div></div><div class=\"span8 project-requirements\"><h6>Requirements</h6></div></div></div></div></div>' );\r\n            \r\n            // properties\r\n            \r\n            $project.attr( 'id', id )\r\n            .find( '.project-name')\r\n                .html( name )\r\n            .end().find( '.project-summary' )\r\n                .html( parameters.summary )\r\n            .end().find( '.project-usables' )\r\n                .html( parameters.usables || 'Anything' )\r\n            .end().find( '.project-time' )\r\n                .html( parameters.time + ' / ' + ( parameters.timeMax || _classTimeMax ) + ' weeks' )\r\n            .end().find( '.project-timebar' )\r\n                .css( 'width', ( parameters.time / ( parameters.timeMax || _classTimeMax ) * 100 ) + '%' );\r\n            \r\n            // files\r\n            \r\n            files = parameters.files;\r\n            $files = $project.find( '.project-files' );\r\n            \r\n            if ( files && files.length > 0 ) {\r\n                \r\n                for ( i = 0, il = files.length; i < il; i++ ) {\r\n                    \r\n                    data = files[ i ];\r\n                    $file = _cloneables.$projectResource.clone( true );\r\n                    \r\n                    $file.attr( 'id', $.trim( data.id ) )\r\n                        .find( '.project-resource-link' )\r\n                        .attr( 'href', $.trim( data.url ) )\r\n                        .html( $.trim( data.text ) );\r\n                    \r\n                    $files.append( $file );\r\n                    \r\n                }\r\n                \r\n            }\r\n            else {\r\n                \r\n                $files.addClass( 'hidden' );\r\n                \r\n            }\r\n            \r\n            // links\r\n            \r\n            links = parameters.links;\r\n            $links = $project.find( '.project-links' );\r\n            \r\n            if ( links && links.length > 0 ) {\r\n                \r\n                for ( i = 0, il = links.length; i < il; i++ ) {\r\n                    \r\n                    data = links[ i ];\r\n                    $link = _cloneables.$projectResource.clone( true );\r\n                    \r\n                    $link.attr( 'id', $.trim( data.id ) )\r\n                        .find( '.project-resource-link' )\r\n                        .attr( 'href', $.trim( data.url ) )\r\n                        .html( $.trim( data.text ) );\r\n                    \r\n                    $links.append( $link );\r\n                    \r\n                }\r\n                \r\n            }\r\n            else {\r\n                \r\n                $links.addClass( 'hidden' );\r\n                \r\n            }\r\n            \r\n            // requirements\r\n            \r\n            requirements = parameters.requirements;\r\n            $requirements = $project.find( '.project-requirements' );\r\n            \r\n            if ( requirements && requirements.length > 0 ) {\r\n                \r\n                for ( i = 0, il = requirements.length; i < il; i++ ) {\r\n                    \r\n                    data = requirements[ i ];\r\n                    $requirement = _cloneables.$projectRequirement.clone( true );\r\n                    \r\n                    // properties\r\n                    \r\n                    requirementText = $.trim( data.text );\r\n                    requirementId = id + '_Requirement_' + requirementText;\r\n                    \r\n                    // check if id already in list ( duplicate )\r\n                    \r\n                    if ( requirementIds.indexOf( requirementId ) !== -1 ) {\r\n                    \t\r\n                    \t// increase count\r\n                    \t\r\n                    \trequirementIdCounts[ requirementId ]++;\r\n                    \t\r\n                    }\r\n                    else {\r\n                    \t\r\n                    \t// store in list\r\n                    \r\n                    \trequirementIds.push( requirementId );\r\n                    \t\r\n                    \t// init count\r\n                    \t\r\n                    \trequirementIdCounts[ requirementId ] = 0;\r\n                    \t\r\n                    }\r\n                    \r\n                    // add id count to id\r\n\r\n    \t\t\t\trequirementId += '_' + requirementIdCounts[ requirementId ];\r\n                    \r\n                    // check local storage to see if item already completed\r\n        \t\t\t\r\n    \t\t\t\tif ( window.localStorage ) {\r\n    \t\t\t\t\t\r\n    \t\t\t\t\t$requirement[ window.localStorage[ requirementId ] === 'true' ? 'addClass' : 'removeClass' ]( 'complete' );\r\n    \t\t\t\t\t\r\n    \t\t\t\t}\r\n                    \r\n                    // set properties\r\n                    \r\n                    $requirement.attr( 'id', requirementId )\r\n                        .on( Modernizr.touch ? 'touchend' : 'click', OnRequirementToggle )\r\n                        .find( '.requirement-item-text' )\r\n                        .html( requirementText );\r\n                    \r\n                    // store\r\n                    \r\n                    $requirements.append( $requirement );\r\n                    \r\n                }\r\n                \r\n            }\r\n            else {\r\n                \r\n                $requirements.addClass( 'hidden' );\r\n                \r\n            }\r\n            \r\n            // store project\r\n            \r\n            _elements.$classProjects = _elements.$classProjects.add( $project );\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    function ShowProjects () {\r\n        \r\n        // init projects container\r\n        \r\n        _elements.$classProjectsContainer = _cloneables.$projectsContainer.clone( true );\r\n        \r\n        // add projects container\r\n        \r\n        _elements.$classContent.append( _elements.$classProjectsContainer );\r\n        \r\n        // init accordion\r\n        \r\n        _elements.$classProjectsAccordion = _cloneables.$projectsAccordion.clone( true );\r\n        \r\n        // add accordion\r\n        \r\n        _elements.$classProjectsContainer.append( _elements.$classProjectsAccordion );\r\n        \r\n        if ( _elements.$classProjects.length > 0 ) {\r\n            \r\n            // hide projects warning\r\n            \r\n            _elements.$classProjectsContainer.find( '#projectsEmptyWarning' ).addClass( 'hidden' );\r\n            \r\n            // for each project\r\n            \r\n            _elements.$classProjects.each( function ( i, element ) {\r\n                \r\n                var $project = $( this ),\r\n                    $projectBody = $project.find( '.accordion-body' );\r\n                \r\n                // add to display\r\n                \r\n                _elements.$classProjectsAccordion.append( $project );\r\n                \r\n                // setup accordion behavior\r\n                \r\n                $projectBody.collapse( {\r\n                        parent: '#projectsAccordion',\r\n                        toggle: false\r\n                    } )\r\n                    .collapse( 'hide' );\r\n                \r\n                $project.find( '.accordion-toggle' )\r\n                    .on( Modernizr.touch ? 'touchend' : 'click', $.proxy( OnProjectToggle, $projectBody ) );\r\n                    \r\n            } );\r\n            \r\n        }\r\n        \r\n        // add link to navigation\r\n        \r\n        AddClassLink( _elements.$classProjectsLink, _elements.$classNavListMain );\r\n        \r\n    }\r\n    \r\n    /*===================================================\r\n    \r\n    calendar\r\n    \r\n    =====================================================*/\r\n    \r\n    function AddCalendar ( parameters ) {\r\n        \r\n        if ( parameters && parameters.embed || parameters.link ) {\r\n            \r\n            // init calendar\r\n            \r\n            _elements.$classCalendar = _cloneables.$calendar.clone( true );\r\n            \r\n            // handle embed\r\n            \r\n            if ( parameters.embed ) {\r\n                \r\n                _cloneables.$calendarEmbed.clone( true )\r\n                    .appendTo( _elements.$classCalendar )\r\n                    .attr( 'src', parameters.embed );\r\n                \r\n            }\r\n            \r\n            // handle link\r\n            \r\n            if ( parameters.link ) {\r\n                \r\n                _cloneables.$calendarLink.clone( true )\r\n                    .appendTo( _elements.$classCalendar )\r\n                    .find( '.calendar-link' )\r\n                        .attr( 'href', parameters.link );\r\n                    \r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    function ShowCalendar () {\r\n        \r\n        if ( _elements.$classCalendar.length > 0 ) {\r\n            \r\n            // add calendar\r\n            \r\n            _elements.$classContent.append( _elements.$classCalendar );\r\n            \r\n            // add link to navigation\r\n            \r\n            AddClassLink( _elements.$classCalendarLink, _elements.$classNavListMain );\r\n        \r\n        }\r\n        \r\n    }\r\n    \r\n    /*===================================================\r\n    \r\n    presentations\r\n    \r\n    =====================================================*/\r\n    \r\n    function InitPresentation () {\r\n        \r\n        var $presentationPrev,\r\n            $steps;\r\n        \r\n        // handle new steps\r\n        \r\n        $steps = _elements.$presentationPlaceholder.find( '.step' );\r\n        \r\n        if ( $steps.length > 0 ) {\r\n            \r\n            // store current presentation\r\n            \r\n            $presentationPrev = _elements.$presentation;\r\n            \r\n            // add new presentation container\r\n            \r\n            _elements.$presentation = _cloneables.$presentation.clone( true ).insertAfter( _elements.$presentationPlaceholder );\r\n            \r\n            // deinit current presentation and remove when done\r\n            \r\n            if ( $presentationPrev.jmpress( 'initialized' ) ) {\r\n                \r\n                _elements.$presentationsRemove = _elements.$presentationsRemove.add( $presentationPrev );\r\n                \r\n                $presentationPrev.addClass( 'hidden' ).jmpress( 'deinit' );\r\n                \r\n            }\r\n            // remove instantly\r\n            else {\r\n                \r\n                $presentationPrev.remove();\r\n                \r\n            }\r\n            \r\n            // add steps and init presentation\r\n            \r\n            _elements.$presentation.append( $steps ).jmpress();\r\n            \r\n            // ensure canvas has no width or height, else will start misaligned\r\n            \r\n            _elements.$presentation.jmpress( 'canvas' ).width( 0 ).height( 0 );\r\n            \r\n            // update pretty print\r\n            \r\n            prettyPrint();\r\n            \r\n            // resize\r\n            \r\n            OnResize();\r\n            \r\n            // when images loaded\r\n            \r\n            _elements.$presentation.imagesLoaded( function() {\r\n                \r\n                // hide setup\r\n                \r\n                _elements.$presentationSetup.addClass( 'hidden' );\r\n                \r\n                // for each step\r\n                \r\n                $steps.each( function ( i, element ) {\r\n                    \r\n                    var $element = $( element ),\r\n                        stepData = $element.data('stepData');\r\n                    \r\n                    // set viewport\r\n                    \r\n                    stepData.viewPortWidth = $element.outerWidth( true );\r\n                    stepData.viewPortHeight = $element.outerHeight( true );\r\n                    \r\n                } );\r\n                \r\n                // resize\r\n                \r\n                OnResize();\r\n                \r\n                FitPresentation();\r\n                \r\n            });\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    function MoveToPresentation () {\r\n        \r\n        _elements.$presentations[0].scrollIntoView( true );\r\n        \r\n    }\r\n    \r\n    function FitPresentation () {\r\n        \r\n        _elements.$presentation.jmpress( 'select', _elements.$presentation.jmpress( 'active' ) );\r\n        \r\n    }\r\n    \r\n    return _main;\r\n\t\t\r\n} )( CKH || {} );"]],"start1":0,"start2":0,"length1":0,"length2":39835}]],"length":39835}
