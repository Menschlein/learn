{"ts":1344264467629,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Sticky Plugin\n// =============\n// Author: Anthony Garand\n// Improvements by German M. Bravo (Kronuz) and Ruud Kamphuis (ruudk)\n// Improvements by Leonardo C. Daronco (daronco)\n// Created: 2/14/2011\n// Date: 2/12/2012\n// Website: http://labs.anthonygarand.com/sticky\n// Description: Makes an element on the page stick on the screen as you scroll\n//              It will only set the 'top' and 'position' of your element, you\n//              might need to adjust the width in some cases.\n\n(function($) {\n    var defaults = {\n            topSpacing: 0,\n            bottomSpacing: 0,\n            className: 'is-sticky',\n\t\t\tclassNameNav: 'navbar-fixed-',\n            wrapperClassName: 'sticky-wrapper',\n            maxScroll: Number.MAX_VALUE,\n            maxScrollStart: 0\n        },\n        $window = $(window),\n        $document = $(document),\n        sticked = [],\n        stickedElements = [],\n        windowHeight = $window.height(),\n        scroller = function() {\n            var i, l, s\n                scrollTop = $window.scrollTop(),\n                documentHeight = $document.height(),\n                dwh = documentHeight - windowHeight,\n                extra = (scrollTop > dwh) ? dwh - scrollTop : 0;\n\t\t\tconsole.log( 'sticked.length', sticked.length );\n            for ( i = 0, l = sticked.length; i < l; i++) {\n                \n                s = sticked[i];\n\t\t\t\t\n\t\t\t\tif ( s.stickyElement.not(\":hidden\").length > 0 ) {\n\t\t\t\t\t\n\t\t\t\t\tvar elementTop = s.stickyWrapper.offset().top,\n                        elementHeight = s.stickyWrapper.outerHeight( true ),\n                        maxScrollStart = ( typeof s.maxScrollStart === 'function' ? s.maxScrollStart() : s.maxScrollStart ),\n                        maxScroll = maxScrollStart + ( typeof s.maxScroll === 'function' ? s.maxScroll() : s.maxScroll ),\n\t\t\t\t\t\ttopSpacing = ( typeof s.topSpacing === 'function' ? s.topSpacing() : s.topSpacing ),\n\t\t\t\t\t\tetse = elementTop - topSpacing - extra;\n\t\t\t\t\t\n\t\t\t\t\tif (scrollTop <= etse || scrollTop > maxScroll) {\n\t\t\t\t\t\tif (s.currentTop !== null) {\n\t\t\t\t\t\t\ts.stickyElement\n\t\t\t\t\t\t\t\t.css('top', '')\n                                .css('position', '')\n\t\t\t\t\t\t\t\t.removeClass(s.className + \" \" + s.classNameNav);\n\t\t\t\t\t\t\ts.stickyWrapper\n\t\t\t\t\t\t\t\t.css('height', '' );\n\t\t\t\t\t\t\ts.currentTop = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar bottomSpacing = ( typeof s.bottomSpacing === 'function' ? s.bottomSpacing() : s.bottomSpacing ),\n\t\t\t\t\t\t\tnewTop = documentHeight - s.stickyElement.outerHeight() - topSpacing - bottomSpacing - scrollTop - extra;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (newTop < 0) {\n\t\t\t\t\t\t\tnewTop = newTop + topSpacing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewTop = topSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (s.currentTop != newTop) {\n\t\t\t\t\t\t\ts.stickyElement\n\t\t\t\t\t\t\t\t.addClass(s.className + ( s.stickyElement.is(\".navbar,.subnavbar\") ? \" \" + s.classNameNav : \"\" ) )\n                                .css('top', newTop)\n                                .css('position', 'fixed');\n                            \n\t\t\t\t\t\t\ts.stickyWrapper\n\t\t\t\t\t\t\t\t.css('height', elementHeight );\n\t\t\t\t\t\t\ts.currentTop = newTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n            }\n        },\n        resizer = function() {\n            windowHeight = $window.height();\n        },\n        methods = {\n            init: function(options) {\n                var o = $.extend(defaults, options);\n                return this.each(function() {\n                    var stickyElement = $(this),\n                        stickyId = stickyElement.attr('id'),\n                        wrapper = $('<div></div>')\n                            .attr('id', stickyId + '-sticky-wrapper')\n                            .addClass(o.wrapperClassName);\n                    \n                    if ( stickedElements.indexOf( this ) === -1 ) {\n                        \n                        stickedElements.push( this );\n                        \n                        stickyElement.wrapAll(wrapper);\n                        \n                        sticked.push({\n                            topSpacing: o.topSpacing,\n                            bottomSpacing: o.bottomSpacing,\n                            maxScroll: o.maxScroll,\n                            maxScrollStart: o.maxScrollStart,\n                            stickyElement: stickyElement,\n                            currentTop: null,\n                            stickyWrapper: stickyElement.parent(),\n                            className: o.className,\n    \t\t\t\t\t\tclassNameNav: o.classNameNav + ( ( typeof o.bottomSpacing === 'function' ? o.bottomSpacing() : o.bottomSpacing ) > ( typeof o.topSpacing === 'function' ? o.topSpacing() : o.topSpacing ) ? 'bottom' : 'top' )\n                        });\n                        \n                    }\n                    \n                });\n            },\n            update: scroller,\n            stop: function () {\n                \n                return this.each(function() {\n                    \n                    var index = stickedElements.indexOf( this );\n                    \n                    if ( index !== -1 ) {\n                        \n                        stickedElements.splice( index, 1 );\n                        sticked.splice( index, 1 );\n                        \n                    }\n                        \n                } );\n                \n            }\n        };\n    \n    // event listeners\n    // attempt to use throttle\n    console.log( $.throttle );\n    if ( $.throttle ) {\n        \n        $window.scroll( $.throttle( 250, scroller ) );\n        $window.resize( $.throttle( 250, resizer ) );\n        \n    }\n    else {\n        \n        // should be more efficient than using $window.scroll(scroller) and $window.resize(resizer):\n        \n        if (window.addEventListener) {\n            window.addEventListener('scroll', scroller, false);\n            window.addEventListener('resize', resizer, false);\n        } else if (window.attachEvent) {\n            window.attachEvent('onscroll', scroller);\n            window.attachEvent('onresize', resizer);\n        }\n        \n    }\n\n    $.fn.sticky = function(method) {\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method ) {\n            return methods.init.apply( this, arguments );\n        } else {\n            $.error('Method ' + method + ' does not exist on jQuery.sticky');\n        }\n    };\n    $(function() {\n        setTimeout(scroller, 0);\n    });\n})(jQuery);\n"]],"start1":0,"start2":0,"length1":0,"length2":6479}]],"length":6479}
{"contributors":[],"silentsave":false,"ts":1344264477647,"patch":[[{"diffs":[[0,"    "],[-1,"console.log( $.throttle );"],[0,"\n   "]],"start1":5360,"start2":5360,"length1":34,"length2":8}]],"length":6453,"saved":false}
{"ts":1344264507017,"patch":[[{"diffs":[[0,"\n\t\t\t"],[-1,"console.log( 'sticked.length', sticked.length );"],[0,"\n   "]],"start1":1213,"start2":1213,"length1":56,"length2":8}]],"length":6405,"saved":false}
