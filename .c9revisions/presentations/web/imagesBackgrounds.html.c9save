{"ts":1346696396667,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n<div class=\"step container container-center\">\n    \n    <h1 class=\"superhero-type\">Images & Backgrounds</h1>\n    <h2 class=\"sidekick-type\">are worth <span class=\"logo-type-purple\">a single</span> <span class=\"logo-type-blue\">line</span> of <span class=\"logo-type-green\">code</span></h2>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p>Diamonds for ladies,</p>\n    <img src=\"img/diamond.png\" alt=\"Images\">\n    <h2 class=\"sidekick-type\">Images for designers</h2>\n    <p><small>(in the early days of the web)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"separate\">\n        <img src=\"img/web_type_new.png\" alt=\"Typography\" class=\"iconk-quadgiant\">\n    </div>\n    <p>When we needed special typography,</p>\n    <h3 class=\"sidekick-type\">we used images</h3>\n    <p><small>(in the early days of the web)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/explosion.png\" alt=\"FX\" class=\"separate\">\n    <p>When we needed special effects</p>\n    <h3 class=\"sidekick-type\">we used images</h3>\n    <p><small>(in the early days of the web)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/angry_cloud_128.png\" alt=\"PS Web\" class=\"separate\">\n    <p>A common way to murder web semantics was to</p>\n    <h2 class=\"sidekick-type\">create a layout in photoshop...</h2>\n    <p><small>(in the early days of the web)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/angry_cloud_128.png\" alt=\"PS Web\" class=\"separate\">\n    <p>...and then slice and dice it into</p>\n    <h2 class=\"sidekick-type\">a 100% image website</h2>\n    <p><small>(in the early days of the web)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/question_64.png\" alt=\"Question\" class=\"separate\">\n    <p>But don't we all know that</p>\n    <h2>an image <small>=</small> 1000 words?</h2>\n    <p><small>(and that must be a lot of meaning right?)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/alertcircle_64.png\" alt=\"Alert\" class=\"separate\">\n    <p>Machines usually ignore image content because relative to text</p>\n    <p><span class=\"highlight\">images are very difficult to understand</span></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/web_spider.png\" alt=\"Spiders\">\n    <p>This is especially harmful because <span class=\"highlight\">the web</span> is</p>\n    <h3>searched & organized by these machines</h3>\n    <p><small>(also known as web crawlers)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p>This is one of the major reasons for the downfall of Flash:</p>\n    <div>\n        <h1 class=\"inline-type\">www</h1>\n        <img src=\"img/arrow_right_64.png\" alt=\"Arrow\" class=\"iconk-large dim\">\n        <img src=\"img/flash.png\" alt=\"Flash\" class=\"iconk-doublegiant\">\n        <img src=\"img/arrow_right_64.png\" alt=\"Arrow\" class=\"iconk-large dim\">\n        <h1 class=\"inline-type\">img</h1>\n    </div>\n    <h3 class=\"sidekick-type\">it draws an entire website <span class=\"underline\">as an image</span></h3>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/zoom_64.png\" alt=\"Search\" class=\"separate\">\n    <p><small>To make the web a more search-friendly place,</small></p>\n    <p>we've added many new HTML elements and CSS properties</p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/html_128.png\" alt=\"HTML\" class=\"separate\">\n    <h1 class=\"hero-type\">Images</h1>\n    <h3 class=\"sidekick-type\">are denoted by img</h3>\n    <p><small>(image elements do not need to be closed)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span6\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n&lt;img src=\"images/test.jpg\"&gt;</pre>\n            </div>\n        </div>\n    </div>\n    <p>To choose the image to be shown,</p>\n    <h3 class=\"sidekick-type\">use the src attribute</h3>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/alertcircle_64.png\" alt=\"Alert\" class=\"separate\">\n    <p>Much like the anchor element and its href attribute,</p>\n    <h2 class=\"sidekick-type\">a src can be relative or absolute</h2>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/keyboard_no_64.png\" alt=\"No Input\" class=\"separate\">\n    <p>Unlike an anchor element,</p>\n    <h2 class=\"sidekick-type\">images are not naturally interactive</h2>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div>\n        <img src=\"http://placehold.it/600x256\" alt=\"\" class=\"separate\">\n    </div>\n    <a href=\"http://www.placehold.it/\" target=\"_blank\"><h1>placehold.it</h1></a>\n    <p>Making or getting images takes time, use placeholders instead!</p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/css_128.png\" alt=\"CSS\" class=\"separate\">\n    <h1 class=\"hero-type\">Backgrounds</h1>\n    <h3 class=\"sidekick-type\">are CSS properties that apply to all elements</h3>\n    <p><small>(but by default, backgrounds are transparent)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    \n    <div class=\"row\">\n        <div class=\"span6\">\n            <div class=\"separate\">\n                <div class=\"iconk-large\" style=\"background-color: #635cd0; width:100%\"></div>\n            </div>\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-color: #635cd0;\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p>The <span class=\"highlight\">background-color</span> property defines</p>\n    <h3>the fill color</h3>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p>All HTML colors can be one of several types:</p>\n    <h3><span class=\"highlight\">keywords</span> <span class=\"highlight\">hex</span> <span class=\"highlight\">rgb</span> <span class=\"highlight\">rgba</span></h3>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span6\">\n            <div class=\"separate\">\n                <div class=\"iconk-large\" style=\"background-color: black; width:100%\"></div>\n            </div>\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-color: black;\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p><span class=\"highlight\">Keyword</span> colors are</p>\n    <h3>built in words</h3>\n    <p><small>(such as “white” or “black”)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span6\">\n            <div class=\"separate\">\n                <div class=\"iconk-large\" style=\"background-color: #000000; width:100%\"></div>\n            </div>\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-color: #000000;\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p><span class=\"highlight\">#HEX</span> colors are</p>\n    <h3># + 6 hexadecimal characters</h3>\n    <p>and each HEX code is actually 4 parts:</p>\n    <div class=\"row\">\n        <div class=\"span1\">\n            <p><small>#</small></p>\n            <p><small>flag</small></p>\n        </div>\n        <div class=\"span1\">\n            <p><small>00</small></p>\n            <p><small>red</small></p>\n        </div>\n        <div class=\"span1\">\n            <p><small>00</small></p>\n            <p><small>green</small></p>\n        </div>\n        <div class=\"span1\">\n            <p><small>00</small></p>\n            <p><small>blue</small></p>\n        </div>\n    </div>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span6\">\n            <div class=\"separate\">\n                <div class=\"iconk-large\" style=\"background-color: #000; width:100%\"></div>\n            </div>\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-color: #000;\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p><span class=\"highlight\">HEX</span> colors can also be</p>\n    <h3># + 3 hexadecimal characters</h3>\n    <p><small>(each char is doubled)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span8\">\n            <div class=\"separate\">\n                <div class=\"iconk-large\" style=\"background-color: rgb( 0, 0, 0 ); width:100%\"></div>\n            </div>\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-color: rgb( 0, 0, 0 );\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p><span class=\"highlight\">RGB</span> colors take the form</p>\n    <h3>rgb(num, num, num)</h3>\n    <p><small>(where num is between 0-255)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span8\">\n            <div class=\"separate\">\n                <div class=\"iconk-large\" style=\"background-color: rgba( 0, 0, 0, 0.5 ); width:100%\"></div>\n            </div>\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-color: rgba( 0, 0, 0, 0.5 );\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p><span class=\"highlight\">RGBA</span> colors can be transparent and take the form</p>\n    <h3>rgba(num, num, num, opacity)</h3>\n    <p><small>(where opacity is between 0-1)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span9\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-image: url( 'images/test.jpg' );\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p>The <span class=\"highlight\">background-image</span> property defines</p>\n    <h3>an image in the background</h3>\n    <p><small>(background images default to top, left and infinite repetition)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/alertcircle_64.png\" alt=\"Alert\" class=\"separate\">\n    <p>Unlike an image element, <span class=\"highlight\">background-images</span></p>\n    <h2 class=\"sidekick-type\">do not affect the size of their element</h2>\n    <p><small></small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"iconk-quadgiant logo-gradient\"></div>\n    <h1>Background images</h1>\n    <h3 class=\"sidekick-type\">can also be gradients</h3>\n    <p><small>(this is very useful for UI design)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/alertcircle_64.png\" alt=\"Alert\" class=\"separate\">\n    <p>CSS Gradients are an <span class=\"highlight\">experimental property</span> and we will only define the official property</p>\n    <div>\n        <a href=\"http://www.google.com/search?q=css+gradient\" target=\"_blank\"><h2>use a generator for full support</h2></a>\n    </div>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p class=\"separate\">Gradients come in several forms:</p>\n    <div class=\"row\">\n        <div class=\"span4\">\n            <div class=\"iconk-doublegiant logo-gradient\"></div>\n            <h1>linear</h1>\n        </div>\n        <div class=\"span4\">\n            <div class=\"iconk-doublegiant logo-gradient-radial\"></div>\n            <h1>radial</h1>\n        </div>\n    </div>\n    <p><small>(linear has the best support and may be the most useful)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p><span class=\"highlight\">Linear gradients</span> take the form</p>\n    <h3>linear-gradient(direction, color stops)</h3>\n    <p><small>(remember, this is the official form and not the browser specific form!)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p>Gradient <span class=\"highlight\">direction</span> can be</p>\n    <h2 class=\"sidekick-type\">an angle such as</h2>\n    <h1>“45deg”</h1>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p>Gradient <span class=\"highlight\">direction</span> can be</p>\n    <h2 class=\"sidekick-type\">a phrase such as</h2>\n    <h1>“to bottom”</h1>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p>Gradient <span class=\"highlight\">color stops</span> are</p>\n    <h3>evenly positioned colors</h3>\n    <p><small>(a gradient requires at least 2 separated by commas)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span10\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">background-color: linear-gradient( 0deg, white 15%, black 75% );</pre>\n            </div>\n        </div>\n    </div>\n    <p>Gradient <span class=\"highlight\">color stops</span> can be positioned</p>\n    <h2 class=\"sidekick-type\">using a % after each color</h2>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"iconk-quadgiant logo-gradient\"></div>\n    <h3 class=\"sidekick-type\">lets take a look at how many rules it takes</h3>\n    <p>to make an experimental property work...</p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span12\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n<small>.gradient {\n    background-color: linear-gradient(to bottom, #635cd0 0%,#39a4f4 51%,#53ccbe 100%);\n}</small></pre>\n            </div>\n        </div>\n    </div>\n    <h2>W3C Official</h2>\n    <p><small>(correct support)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span6\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n<small>.gradient {\n    background: #635cd0;\n}</small></pre>\n            </div>\n        </div>\n    </div>\n    <h2>Old Browsers</h2>\n    <p><small>(no support)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span8\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n<small>.gradient {\n    background: -moz-linear-gradient(top, #635cd0 0%, #39a4f4 51%, #53ccbe 100%);\n}</small></pre>\n            </div>\n        </div>\n    </div>\n    <h2>Firefox 3.6+</h2>\n    <p><small>(almost right)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span12\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n<small>.gradient {\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#635cd0), color-stop(51%,#39a4f4), color-stop(100%,#53ccbe));\n}</small></pre>\n            </div>\n        </div>\n    </div>\n    <h2>Old Chrome & Safari 4.1+</h2>\n    <p><small>(supported but old code)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span12\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n<small>.gradient {\n    background: -webkit-linear-gradient(top, #635cd0 0%,#39a4f4 51%,#53ccbe 100%);\n}</small></pre>\n            </div>\n        </div>\n    </div>\n    <h2>New Chrome & Safari 5.1+</h2>\n    <p><small>(almost right)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span12\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n<small>.gradient {\n    background: -o-linear-gradient(top, #635cd0 0%,#39a4f4 51%,#53ccbe 100%);\n}</small></pre>\n            </div>\n        </div>\n    </div>\n    <h2>Opera 11.10+</h2>\n    <p><small>(almost right)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span12\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n<small>.gradient {\n    background: -ms-linear-gradient(top, #635cd0 0%,#39a4f4 51%,#53ccbe 100%);\n}</small></pre>\n            </div>\n        </div>\n    </div>\n    <h2>Internet Explorer 10+</h2>\n    <p><small>(almost right)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span12\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\n<small>.gradient {\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#635cd0', endColorstr='#53ccbe',GradientType=0 );\n}</small></pre>\n            </div>\n        </div>\n    </div>\n    <h2>Internet Explorer 6-9</h2>\n    <p><small>(don't even try)</small></p>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/alertcircle_64.png\" alt=\"Alert\" class=\"separate\">\n    <p>Notice how each browser uses a</p>\n    <h2 class=\"sidekick-type\">experimental property prefix</h2>\n    <p><small>(this is used until the property is official)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <p><small>all combined gradient rules:</small></p>\n    <div class=\"iconk-quadgiant logo-gradient\"></div>\n\n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span8\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-position: center top;\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p>The <span class=\"highlight\">background-position</span> property defines</p>\n    <h3>where background begins</h3>\n    <p><small>(common values are position keywords and %)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"row\">\n        <div class=\"span8\">\n            <div class=\"container-left\">\n                <pre class=\"prettyprint linenums\">\ndiv {\n    background-position: repeat-x;\n}</pre>\n            </div>\n        </div>\n    </div>\n    <p>The <span class=\"highlight\">background-repeat</span> property defines</p>\n    <h3>the direction of repetition</h3>\n    <p><small>(common values are repeat, repeat-x, repeat-y, and no-repeat)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/research_64.png\" alt=\"Magic\" class=\"separate\">\n    <h3 class=\"sidekick-type\">Centering elements on the web</h3>\n    <h1>is not natural <small>(yet)</small></h1>\n    <p>but can be done using various methods</p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"separate dim\">\n        <img src=\"img/arrow_left_64.png\" alt=\"Arrow\" class=\"iconk\">\n        <div class=\"iconk-giant logo-gradient\" style=\"width: 300px\"></div>\n        <img src=\"img/arrow_right_64.png\" alt=\"Arrow\" class=\"iconk\">\n    </div>\n    <p><span class=\"highlight\">Horizontal centering</span> can be done using</p>\n    <h3>auto left & right margins</h3>\n    <p><small>(but the element must have a defined width)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"separate dim\">\n        <img src=\"img/arrow_left_64.png\" alt=\"Arrow\" class=\"iconk\">\n        <h1 class=\"inline-type\" style=\"margin: 0;\">text</h2>\n        <img src=\"img/arrow_right_64.png\" alt=\"Arrow\" class=\"iconk\">\n    </div>\n    <p><span class=\"highlight\">Horizontal centering</span> can be done using</p>\n    <h3>text-align: center</h3>\n    <p><small>(but the element must be displayed as inline)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <div class=\"separate dim\">\n        <img src=\"img/arrow_up_64.png\" alt=\"Arrow\">\n        <h1 style=\"margin: 0;\">text or cell</h2>\n        <img src=\"img/arrow_down_64.png\" alt=\"Arrow\">\n    </div>\n    <p><span class=\"highlight\">Vertical centering</span> can be done using</p>\n    <h3>vertical-align: center</h3>\n    <p><small>(but the element must be displayed as inline or table-cell)</small></p>\n    \n</div>\n\n<div class=\"step container container-center\">\n    \n    <img src=\"img/alertcircle_64.png\" alt=\"Alert\" class=\"separate\">\n    <p>Centering will only center children</p>\n    <h2 class=\"sidekick-type\">relative to each other</h2>\n    \n</div>\n<!--\n\nImages & Backgrounds are worth 1 line of code\n\nIn the early days of the web, images were a designer's best friend\n\nWhen we needed special typography, we used images\n\nWhen we needed rounded corners, drop shadows, or 3D effects, we used images\n\nA common way to murder web semantics was to create a layout in photoshop\n\nThen slice and dice it\n\nAnd upload a website made of 100% images\n\nThis is especially harmful because the web is searched, organized, and linked by machines\n\nThese machines are also known as web crawlers\n\nMachines don’t usually see images like we do, and will ignore the content of an image\n\nThey do this because images take much, much longer to understand than text\n\nThis is one of the major reasons for the downfall of Flash: it draws an entire website as an image\n\nTo make the web a more search-friendly place, we've added many new HTML elements and CSS properties\n\nAn image element is denoted by img, and is a link to an image (it also does not need to be closed)\n\nTo choose the image to be shown, use the src attribute\n\nMuch like the anchor element and its href attribute, the src attribute can be relative or absolute\n\nUnlike the anchor element, images are not naturally interactive\n\nMaking or getting images takes time, use placeholders instead!\n\nBackgrounds in HTML apply to all elements\n\nBy default, backgrounds are transparent\n\nThe background-color property defines the fill color\n\nAll HTML colors can be one of several types: keywords, hex, rgb, and rgba\n\nKeyword colors are built in words such as “white” or “black”\n\nHEX colors are non-transparent and take the form: “#” + 6 hexadecimal characters\n\nHEX colors can also be “#” + 3 hexadecimal characters, where each char is doubled\n\nRGB colors are non-transparent and take the form: “rgb(num, num, num)”, where num is between 0-255\n\nRGBA colors are transparent and take the form: “rgba(num, num, num, opacity)”, where opacity is between 0-1\n\nThe background-image property defines an image in the background\n\nBackground images default to top, left and infinite repetition\n\nUnlike an image element, background images do not affect the width and height of their element\n\nBackground images can also be gradients\n\nGradients come in two forms: linear or radial, linear has the best support and may be the most useful\n\nLinear gradients take the form of “linear-gradient(direction, color stops)”\n\nGradient direction can be an angle, such as “45deg”\n\nGradient direction can be a phrase such as “to bottom”\n\nGradient color stops are evenly positioned colors and require at least 2 separated by commas\n\nGradient color stops can be positioned using a % after each color, such as “white 40%”\n\nFor example, a top to bottom, purple, blue, and green gradient: background-image: linear-gradient(to bottom, purple, blue, green)\n\nThe background-position property defines where background begins, common values are position keywords and %\n\nThe background-repeat property defines the direction of repetition, common values are repeat, repeat-x, repeat-y, and no-repeat\n\nCentering elements on the web is not natural(yet), but can be done using various methods\n\nHorizontal centering can be done using left & right margins, but the element must have a defined width\n\nHorizontal centering can be done using text-align, but the element must be displayed as inline\n\nVertical centering can be done using vertical-align, but the element must be displayed as inline or table-cell\n\nCentering will only center children relative to each other\n\n-->"]],"start1":0,"start2":0,"length1":0,"length2":23904}]],"length":23904}
